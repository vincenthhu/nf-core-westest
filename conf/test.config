/*
========================================================================================
    Nextflow config file for running minimal tests
========================================================================================
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/westest -profile test,<docker/singularity>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '6.h'

    // Input data
    // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
    // TODO nf-core: Give any required params for the test so that command line flags are not needed
    input  = 'https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/samplesheet/samplesheet_test_illumina_amplicon.csv'

    // Genome references
    // genome = 'R64-1-1'
    genome = 'hg38'
    genomeAnno = $genome

    // Genome references
    // fasta                    = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/genome.fa'
    // gtf                      = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/genes.gtf.gz'
    // gff                      = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/genes.gff.gz'
    // transcript_fasta         = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/transcriptome.fasta'
    // additional_fasta         = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/gfp.fa.gz'

    // bbsplit_fasta_list       = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/bbsplit_fasta_list.txt'
    // hisat2_index             = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/hisat2.tar.gz'
    // star_index               = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/star.tar.gz'
    // salmon_index             = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/salmon.tar.gz'
    // rsem_index               = 'https://github.com/nf-core/test-datasets/raw/rnaseq/reference/rsem.tar.gz'

    // !!!!!!!!!!!!!!!!!!!
    target_bed                  = ''
    refFlat                     = ''

    fasta                       = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/Homo_sapiens_assembly38.fasta'
    dict                        = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/Homo_sapiens_assembly38.fasta.dict'
    chromsize                   = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/Homo_sapiens_assembly38.fasta.chromsize'
    bwamem2                     = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/Homo_sapiens_assembly38.fasta'

    // broadref                 = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/'
    dbsnp                       = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/dbSNP/dbsnp_146.hg38.vcf.gz'
    dbsnp_index                 = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/dbSNP/dbsnp_146.hg38.vcf.gz.tbi'

    g1000snp                    = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/1000G_phase1.snps.high_confidence.hg38.vcf.gz'
    hapmap                      = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/hapmap_3.3.hg38.vcf.gz'
    mills                       = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz'
    omni                        = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/1000G_omni2.5.hg38.vcf.gz'
    axiom                       = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/Axiom_Exome_Plus.genotypes.all_populations.poly.hg38.vcf.gz'
    knownindels                 = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/Homo_sapiens_assembly38.known_indels.vcf.gz'
    cosmic                      = '/group/bioinformatics/ReferenceData/cosmic/v90/cosmic_coding_and_noncoding_chr_M_sorted.vcf'
    germline_resource           = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/af-only-gnomad.hg38.vcf.gz'
    germline_resource_index     = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/af-only-gnomad.hg38.vcf.gz.tbi'

    // ponVCF                   = '/group/bioinformatics/Projects/CRI-BIO-745-Oth-ZZhang-honghu/reference/gatk4_mutect2_4136_pon.vcf.gz'
    // variantsForContamination = '/group/bioinformatics/ReferenceData/Homo_Sapien/GATK/broadref/hg38/small_exac_common_3.hg38.vcf.gz'

    // Other parameters
    // skip_bbsplit             = false
    // pseudo_aligner           = 'salmon'
    // umitools_bc_pattern      = 'NNNN'

}
